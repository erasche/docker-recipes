# Currently only postgres is supported
database.driverClass=org.postgresql.Driver

# Format: jdbc:postgresql://{hostname}/{dbame}
database.jdbcUrl=jdbc:postgresql://{{ .Env.DB_PORT_5432_TCP_ADDR }}:5432/{{ .Env.DB_NAME }}
database.username={{ .Env.DB_USER }}
database.password={{ .Env.DB_PASS }}

database.partitionCount=5
database.aquireIncement=5
database.minConnectionsPerPartition=1
database.maxConnectionsPerPartition=10
database.idleConnectionTestPeriod=30

sparqlify.maxQueryExecutionTime=30
sparqlify.maxResultSetRowCount=1000

# The baseUrl of pubby
# Set this to the URL from where pubby should serve resources for the public,
# e.g. http://example.org/linked-data/
# Don't forget the trailing slash!
# FIXME Maybe rename to e.g. pubby.baseUrl or platform.pubby.baseUrl

# The linked data base URI is the place from where linked data is
# (virtually) served to
# the public. Content negotion redirects will be relative to this URI  -
# make sure to add a trailing slash!
# 
# Example:
# http://yourhost.org/
#
# http://yourhost.org/mydataset/
#
platform.linkedData.baseUri=http://localhost:7531/


# By default, Sparqlify will assume that data in
# the namespace http://somehostname.org/
# is virtually rehosted directly under the baseUri.
# However, if it is actually rehosted under a certain
# context path, you need to indicate this.
#
# Example:
# If you have a proxy pass entry such as:
# ProxyPass /mydataset http://localhost:7531/pubby
# you can set the context path to 'mydataset/' so that mydataset gets appended.
#
# TODO Now that I think about it, one could just do something like:
# ProxyPass /mydataset http://localhost:7531/pubby/resource
#
platform.linkedData.contextPath=/


#pubby.baseUrl=http://localhost:7531/pubby/
#pubby.contextPath=wortschatz/

platform.projectName=My Project
platform.projectHomepage=http://example.org

# There properties are currently NOT used - they might be added at a later stage (open issues if you want them)
#sparqlify.mappingFile=./view.sparqlify
#norql.namespaceFile=namespaces.js
#pubby.configFile=config.ttl


